{"version":3,"sources":["../../src/index.js","schema.js","App.js","index.js"],"names":["reducer","state","type","payload","inputKey","inputValue","values","cloneDeep","touched","set","errors","isSubmitted","submitCounter","defaultConfig","validate","validationOnChange","validateSchema","initialValues","config","initalState","getInitialState","useReducer","dispatch","React","validateForm","checkForm","getValidationErrors","isValid","Promise","resolve","abortEarly","err","currentErr","get","yupErr","console","handleChange","useCallback","key","value","resetForm","clearForm","oldValues","Object","handleSubmit","onSubmit","setValues","registerSchema","yup","shape","name","firstName","min","required","email","title","oneOf","website","url","Input","label","placeholder","onChange","error","htmlFor","e","currentTarget","className","join","TitleInput","target","App","useMemo","useForm","data","log","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78be1a66.chunk.js","sourcesContent":["/* eslint-disable promise/param-names */\r\n/* eslint-disable no-case-declarations */\r\nimport React, { useReducer, useCallback } from 'react'\r\nimport set from 'lodash/set'\r\nimport get from 'lodash/get'\r\nimport cloneDeep from 'lodash/cloneDeep'\r\n\r\nconst getInitialState = (initialValues) => {\r\n  return {\r\n    values: {\r\n      ...initialValues\r\n    },\r\n    errors: {}, // all errors\r\n    touched: {}, // dirty field names\r\n    isSubmitted: false, // is form submitted to check validation\r\n    submitCounter: 0\r\n  }\r\n}\r\n\r\nconst reducer = (state, { type, payload }) => {\r\n  switch (type) {\r\n    case 'INPUT_CHANGE':\r\n      const inputKey = payload.key\r\n      const inputValue = payload.value\r\n      const values = cloneDeep(state.values)\r\n      const touched = cloneDeep(state.touched)\r\n      return {\r\n        ...state,\r\n        values: set(values, inputKey, inputValue),\r\n        touched: set(touched, inputKey, true)\r\n      }\r\n    case 'VALIDATE_FORM':\r\n      const errors = payload.errors || {}\r\n      return {\r\n        ...state,\r\n        errors\r\n      }\r\n    case 'SET_VALUES':\r\n      return { ...state, values: { ...payload.values } }\r\n    case 'RESET_FORM':\r\n      return { ...payload, errors: {} }\r\n    case 'SUBMIT_FORM':\r\n      return {\r\n        ...state,\r\n        isSubmitted: true,\r\n        submitCounter: ++state.submitCounter\r\n      }\r\n    case 'CLEAR_FORM':\r\n      return { ...state, values: { ...payload.values }, errors: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst defaultConfig = {\r\n  validate: true, // should validate form?\r\n  validationOnChange: false, // should form validate on blur input\r\n  validateSchema: false // yup validation schema\r\n}\r\n\r\nconst useForm = (initialValues = {}, config = { ...defaultConfig }) => {\r\n  const initalState = getInitialState(initialValues)\r\n  const [state, dispatch] = useReducer(reducer, initalState)\r\n  const { validate, validationOnChange, validateSchema } = config\r\n\r\n  React.useEffect(() => {\r\n    async function checkForm() {\r\n      await validateForm()\r\n    }\r\n    if (validationOnChange && state.isSubmitted) {\r\n      checkForm()\r\n    }\r\n  }, [state.values, validationOnChange])\r\n\r\n  // React.useEffect(() => {\r\n  //   async function checkForm() {\r\n  //     if (await validateForm()) {\r\n  //       onSubmit();\r\n  //     }\r\n  //   }\r\n\r\n  //   state.isSubmitted && checkForm()\r\n  // }, [state.submitCounter, state.isSubmitted])\r\n\r\n  const validateForm = async () => {\r\n    const { isValid, errors } = await getValidationErrors()\r\n    dispatch({ type: 'VALIDATE_FORM', payload: { errors } })\r\n    return isValid\r\n  }\r\n\r\n  const getValidationErrors = () => {\r\n    return new Promise((resolve, _) => {\r\n      if (validateSchema) {\r\n        try {\r\n          const isValid = validateSchema.validateSync(state.values, {\r\n            abortEarly: false\r\n          })\r\n          resolve({ isValid, errors: {} })\r\n        } catch (err) {\r\n          const errors = {}\r\n\r\n          err.inner.forEach((yupErr) => {\r\n            const currentErr = get(errors, yupErr.path)\r\n            if (currentErr) {\r\n              set(errors, yupErr.path, [...currentErr, yupErr.message])\r\n            } else {\r\n              set(errors, yupErr.path, [yupErr.message])\r\n            }\r\n          })\r\n          console.log({ errors })\r\n          resolve({ isValid: false, errors })\r\n        }\r\n      } else {\r\n        resolve({ isValid: true, errors: {} })\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleChange = useCallback(async (key, value) => {\r\n    dispatch({\r\n      type: 'INPUT_CHANGE',\r\n      payload: { key, value }\r\n    })\r\n  })\r\n\r\n  const resetForm = useCallback(() => {\r\n    dispatch({\r\n      type: 'RESET_FORM',\r\n      payload: {\r\n        ...initalState\r\n      }\r\n    })\r\n  }, [initalState])\r\n\r\n  const clearForm = useCallback(() => {\r\n    const oldValues = { ...state.values }\r\n    const values = Object.keys(oldValues).forEach(function (key) {\r\n      oldValues[key] = ''\r\n    })\r\n    dispatch({\r\n      type: 'CLEAR_FORM',\r\n      payload: {\r\n        ...values\r\n      }\r\n    })\r\n  })\r\n\r\n  const setValues = (values) => {\r\n    dispatch({\r\n      type: 'SET_VALUES',\r\n      payload: {\r\n        ...values\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleSubmit = useCallback(async (onSubmit) => {\r\n    if (validate) {\r\n      dispatch({ type: 'SUBMIT_FORM' })\r\n      if (await validateForm()) {\r\n        onSubmit(state.values)\r\n      }\r\n    } else {\r\n      onSubmit(state.values)\r\n    }\r\n  })\r\n\r\n  return {\r\n    handleChange,\r\n    resetForm,\r\n    handleSubmit,\r\n    clearForm,\r\n    setValues,\r\n    ...state\r\n  }\r\n}\r\n\r\nexport default useForm","import * as yup from 'yup';\r\n\r\nconst registerSchema = yup.object().shape({\r\n    name: yup.object({\r\n        firstName:yup\r\n        .string()\r\n        .min(5, 'Name must be minimum of length 5')\r\n        .required('Name is required')\r\n    }),\r\n    email: yup\r\n        .string()\r\n        .email('Please enter valid email')\r\n        .required('Email is required'),\r\n    title: yup\r\n        .string()\r\n        .oneOf(['Mr', 'Mrs', 'Miss'],\"Please Select Title\")\r\n        .required(),\r\n    website: yup\r\n        .string()\r\n        .url(\"Please enter valid url\")\r\n        .required('Website is required.')\r\n})\r\n\r\nexport { registerSchema }","import React, { useMemo } from 'react'\r\nimport useForm from 'simple-react-hook-form';\r\nimport { registerSchema } from './schema'\r\nimport './index.css'\r\n\r\nconst Input = ({ label, placeholder, type = 'text', onChange, value = '', error }) => {\r\n  return (\r\n    <div>\r\n      <label htmlFor={label}>{label}</label>\r\n      <input\r\n        onChange={(e) => onChange && onChange(e.currentTarget.value)}\r\n        name={label}\r\n        placeholder={placeholder}\r\n        type={type}\r\n        value={value}\r\n      />\r\n      {\r\n        error &&\r\n        <p className='errorText'>{error.join(\"\\n\")}</p>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst TitleInput = ({ label, onChange, value = '', error }) => {\r\n  return (\r\n    <div>\r\n      <label>{label}</label>\r\n      <select name=\"title\" value={value} onChange={(e) => onChange && onChange(e.target.value)}>\r\n        <option value=\"\">Select {label}</option>\r\n        <option value=\"Mr\">Mr</option>\r\n        <option value=\"Mrs\">Mrs</option>\r\n        <option value=\"Miss\">Miss</option>\r\n      </select>\r\n      {\r\n        error &&\r\n        <p className='errorText'>{error.join(\"\\n\")}</p>\r\n      }\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n\r\n  const initialValues = useMemo(() => {\r\n    return {\r\n      name: {firstName:'Ravi'},\r\n      email: '',\r\n      title: '',\r\n      website: ''\r\n    }\r\n  });\r\n\r\n  const { handleChange, resetForm, clearForm, values, handleSubmit, errors } = useForm(\r\n    initialValues,\r\n    {\r\n      validate: true,\r\n      validateSchema: registerSchema,\r\n      validationOnChange: true\r\n    }\r\n  );\r\n  const onSubmit = (data) => {\r\n    console.log(\"form is valid, Do what you gotta do!\",data);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <form >\r\n\r\n        <Input\r\n          label={'Full Name'}\r\n          placeholder={'Ravi Sojitra'}\r\n          onChange={(value) => handleChange('name.firstName', value)}\r\n          value={values.name?.firstName}\r\n          error={errors.name?.firstName}\r\n        />\r\n\r\n        <Input\r\n          label={'Email'}\r\n          placeholder={'ravisojitra79@gmail.com'}\r\n          onChange={(value) => handleChange('email', value)}\r\n          value={values.email}\r\n          error={errors.email}\r\n        />\r\n\r\n        <Input\r\n          label={'Website'}\r\n          placeholder={'Your Website'}\r\n          onChange={(value) => handleChange('website', value)}\r\n          value={values.website}\r\n          error={errors.website}\r\n        />\r\n\r\n        <TitleInput\r\n          label={'Title'}\r\n          onChange={(value) => handleChange('title', value)}\r\n          value={values.title}\r\n          error={errors.title}\r\n        />\r\n\r\n        <div className=\"buttonContainer\">\r\n          <button type=\"reset\" onClick={clearForm}>Clear</button>\r\n          <button type=\"reset\" onClick={resetForm}>Reset Default</button>\r\n          <button type=\"button\" className='submitButton' onClick={() => handleSubmit(onSubmit)} >Submit</button>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}