{"version":3,"sources":["../../src/index.js","schema.js","App.js","index.js"],"names":["reducer","state","type","payload","inputKey","inputValue","values","touched","errors","isSubmitted","submitCounter","defaultConfig","validate","validationOnChange","validateSchema","initialValues","config","initalState","getInitialState","useReducer","dispatch","React","validateForm","checkForm","getValidationErrors","isValid","Promise","resolve","abortEarly","err","yupErr","handleChange","useCallback","key","value","resetForm","clearForm","oldValues","Object","handleSubmit","onSubmit","setValues","registerSchema","yup","shape","name","min","required","email","title","oneOf","website","url","Input","label","placeholder","onChange","error","htmlFor","e","currentTarget","className","join","TitleInput","target","App","useMemo","useForm","console","log","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7d26ef1.chunk.js","sourcesContent":["import React, { useReducer, useCallback } from 'react'\n\nconst getInitialState = initialValues => {\n  return {\n    values: {\n      ...initialValues\n    },\n    errors: {}, // all errors\n    touched: {}, // dirty field names\n    isSubmitted: false, //is form submitted to check validation\n    submitCounter: 0\n  }\n}\n\nconst reducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'INPUT_CHANGE':\n      let inputKey = payload.key, inputValue = payload.value;\n      return {\n        ...state,\n        values: { ...state.values, [inputKey]: inputValue },\n        touched: { ...state.touched, [inputKey]: true }\n      }\n    case 'VALIDATE_FORM':\n      let errors = payload.errors || {}\n      return {\n        ...state,\n        errors\n      }\n    case 'SET_VALUES':\n      return { ...state, values: { ...payload } }\n    case 'RESET_FORM':\n      return { ...payload, errors: {} }\n    case 'SUBMIT_FORM':\n      return { ...state, isSubmitted: true, submitCounter: ++state.submitCounter }\n    case 'CLEAR_FORM':\n      return { ...state, values: { ...payload.values }, errors: {} }\n    default:\n      return state;\n  }\n}\n\nconst defaultConfig = {\n  validate: true, //should validate form?\n  validationOnChange: false, //should form validate on blur input\n  validateSchema: false //yup validation schema\n}\n\nconst useForm = (initialValues = {}, config = { ...defaultConfig }) => {\n  let initalState = getInitialState(initialValues);\n  const [state, dispatch] = useReducer(reducer, initalState);\n  const { validate, validationOnChange, validateSchema } = config;\n\n  React.useEffect(() => {\n    async function checkForm() {\n      await validateForm();\n    }\n    if (validationOnChange && state.isSubmitted) {\n      checkForm();\n    }\n  }, [state.values, validationOnChange])\n\n  // React.useEffect(() => {\n  //   async function checkForm() {\n  //     if (await validateForm()) {\n  //       onSubmit();\n  //     }\n  //   }\n\n  //   state.isSubmitted && checkForm()\n  // }, [state.submitCounter, state.isSubmitted])\n\n  const validateForm = async () => {\n    let { isValid, errors } = await getValidationErrors();\n    dispatch({ type: 'VALIDATE_FORM', payload: { errors } });\n    return isValid;\n  }\n\n  const getValidationErrors = () => {\n    return new Promise((resolve, _) => {\n      if (validateSchema) {\n        try {\n          let isValid = validateSchema.validateSync(state.values, { abortEarly: false });\n          resolve({ isValid, errors: {} })\n        } catch (err) {\n          let errors = {};\n          err.inner.forEach((yupErr) => {\n            if (errors[yupErr.path]) {\n              errors[yupErr.path].push(yupErr.message);\n            } else {\n              errors[yupErr.path] = [yupErr.message];\n            }\n          });\n          resolve({ isValid: false, errors })\n        }\n      } else {\n        resolve({ isValid: true, errors: {} })\n      }\n    })\n  }\n\n  const handleChange = useCallback(async (key, value) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      payload: { key, value }\n    });\n  })\n\n  const resetForm = useCallback(() => {\n    dispatch({\n      type: 'RESET_FORM',\n      payload: {\n        ...initalState\n      }\n    })\n  }, [initalState]);\n\n  const clearForm = useCallback(() => {\n    let oldValues = { ...state.values }\n    let values = Object.keys(oldValues).forEach(function (key) { oldValues[key] = \"\" });\n    dispatch({\n      type: 'CLEAR_FORM',\n      payload: {\n        ...values\n      }\n    })\n  })\n\n  const setValues = values => {\n    dispatch({\n      type: 'SET_VALUES',\n      payload: {\n        ...values\n      }\n    })\n  }\n\n  const handleSubmit = useCallback(async (onSubmit) => {\n    if (validate) {\n      dispatch({ type: 'SUBMIT_FORM' })\n      if (await validateForm()) {\n        onSubmit();\n      }\n    } else {\n      onSubmit();\n    }\n  });\n\n  return { handleChange, resetForm, handleSubmit, clearForm, setValues, ...state }\n}\n\nexport default useForm;","import * as yup from 'yup';\n\nconst registerSchema = yup.object().shape({\n    name: yup\n        .string()\n        .min(5, 'Name must be minimum of length 5')\n        .required('Name is required'),\n    email: yup\n        .string()\n        .email('Please enter valid email')\n        .required('Email is required'),\n    title: yup\n        .string()\n        .oneOf(['Mr', 'Mrs', 'Miss'],\"Please Select Title\")\n        .required(),\n    website: yup\n        .string()\n        .url(\"Please enter valid url\")\n        .required('Website is required.')\n})\n\nexport { registerSchema }","import React, { useMemo } from 'react'\nimport useForm from 'simple-react-hook-form';\nimport { registerSchema } from './schema'\nimport './index.css'\n\nconst Input = ({ label, placeholder, type = 'text', onChange, value = '', error }) => {\n  return (\n    <div>\n      <label htmlFor={label}>{label}</label>\n      <input\n        onChange={(e) => onChange && onChange(e.currentTarget.value)}\n        name={label}\n        placeholder={placeholder}\n        type={type}\n        value={value}\n      />\n      {\n        error &&\n        <p className='errorText'>{error.join(\"\\n\")}</p>\n      }\n    </div>\n  )\n}\n\nconst TitleInput = ({ label, onChange, value = '', error }) => {\n  return (\n    <div>\n      <label>{label}</label>\n      <select name=\"title\" value={value} onChange={(e) => onChange && onChange(e.target.value)}>\n        <option value=\"\">Select {label}</option>\n        <option value=\"Mr\">Mr</option>\n        <option value=\"Mrs\">Mrs</option>\n        <option value=\"Miss\">Miss</option>\n      </select>\n      {\n        error &&\n        <p className='errorText'>{error.join(\"\\n\")}</p>\n      }\n    </div>\n\n  )\n}\n\nconst App = () => {\n\n  const initialValues = useMemo(() => {\n    return {\n      name: 'Ravi',\n      email: '',\n      title: '',\n      website: ''\n    }\n  });\n\n  const { handleChange, resetForm, clearForm, values, handleSubmit, errors } = useForm(\n    initialValues,\n    {\n      validate: true,\n      validateSchema: registerSchema,\n      validationOnChange: true\n    }\n  );\n\n  const onSubmit = () => {\n    console.log(\"form is valid, Do what you gotta do!\");\n  }\n\n  return (\n    <div className=\"App\">\n      <form >\n\n        <Input\n          label={'Full Name'}\n          placeholder={'Ravi Sojitra'}\n          onChange={(value) => handleChange('name', value)}\n          value={values.name}\n          error={errors.name}\n        />\n\n        <Input\n          label={'Email'}\n          placeholder={'ravisojitra79@gmail.com'}\n          onChange={(value) => handleChange('email', value)}\n          value={values.email}\n          error={errors.email}\n        />\n\n        <Input\n          label={'Website'}\n          placeholder={'Your Website'}\n          onChange={(value) => handleChange('website', value)}\n          value={values.website}\n          error={errors.website}\n        />\n\n        <TitleInput\n          label={'Title'}\n          onChange={(value) => handleChange('title', value)}\n          value={values.title}\n          error={errors.title}\n        />\n\n        <div className=\"buttonContainer\">\n          <button type=\"reset\" onClick={clearForm}>Clear</button>\n          <button type=\"reset\" onClick={resetForm}>Reset Default</button>\n          <button type=\"button\" className='submitButton' onClick={() => handleSubmit(onSubmit)} >Submit</button>\n        </div>\n\n      </form>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}